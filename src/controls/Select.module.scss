@import 'shared';

/*
 * The structure of a React-Select is something like this:
 *
 * SelectContainer
 *     Control
 *         ValueContainer
 *             Placeholder
 *             SingleValue
 *             [MultiValue]
 *                 MultiValueLabel
 *                 MultiValueRemove
 *             Input
 *         IndicatorsContainer
 *             ClearIndicator
 *             LoadingIndicator
 *             IndicatorSeparator
 *             DropdownIndicator
 *     Menu
 *         MenuList
 *             LoadingMessage
 *             NoOptionsMessage
 *             [Option]
 *             [Group]
 *                 GroupHeading
 *                 div
 *                     [Option]
 *
 * (The square brackets indicate lists of elements.)
 */

.select {
    display: inline-block;
    position: relative;
    line-height: 1.15;
}

.select:global() {
    &__control {
        cursor: default;
        background-color: $grey-3;
        border-radius: 0.15em;

        font-size: 1em;
        display: flex;
        position: relative;

        display: flex;
        align-items: stretch;

        // &--menu-is-open,
        &:hover:not(&--menu-is-open) {
            background-color: $grey-4;
        }
        &--is-focused {
            box-shadow: inset 0 0 2px 1px $purple-5;
        }
        &--menu-is-open {
            background-color: $purple-2;
            box-shadow: inset 0 0 2px 1px $purple-7;
        }
    }

    &__value-container {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        border: 2px solid transparent;
    }

    // Simulate the appearance of a text input
    &--is-searchable &__value-container {
        border-color: $grey-3;
        border-radius: 0.15em 0 0 0.15em;
        background-color: $grey-1;
    }
    &--is-searchable &__control:hover:not(&__control--is-focused) &__value-container {
        border-color: $grey-4;
    }
    &--is-searchable &__control--is-focused &__value-container {
        border-color: $purple-5;
        background-color: white;
    }

    &__placeholder {
        color: $grey-6;
        padding: 0.15em 0 0.15em 0.15em;
    }
    &__control:hover &__placeholder,
    &__control--is-focused &__placeholder {
        color: $grey-9;
    }

    &__single-value {
        padding: 0.15em 0 0.15em 0.15em;
    }

    &__multi-value {
        background: $grey-3;
        // font-size: 0.95em;
        border-radius: 0.15em;
        margin-left: 0.15em;
        margin: 0.15em 0 0.15em 0.2em;
        letter-spacing: -0.01em;
        white-space: nowrap;
        box-shadow: inset 0 0 0 1px $grey-4;

        display: flex;
        align-items: center;

        &__label {
            // Text outline for the bits that stick below the baseline
            text-shadow: -1px -1px 0 $grey-3, 1px -1px 0 $grey-3, -1px 1px 0 $grey-3,
                1px 1px 0 $grey-3;

            padding: 0em 0 0em 0.15em;
        }
        &__remove {
            padding: 0 0.3em 0 0.3em;
            align-self: stretch;
            color: $grey-8;
            cursor: pointer;
            &:hover {
                filter: drop-shadow(0 0 1px $red-4) drop-shadow(0 0 1px $red-4)
                    drop-shadow(0 0 1px $red-4);
                color: $red-9;
            }

            display: flex;
            align-items: center;
            svg {
                height: 0.65em;
                width: auto;
            }
        }
    }
    &__control:hover &__multi-value,
    &__control--is-focused &__multi-value {
        box-shadow: inset 0 0 0 1px $grey-5;
        background: $grey-4;

        &__label {
            text-shadow: -1px -1px 0 $grey-4, 1px -1px 0 $grey-4, -1px 1px 0 $grey-4,
                1px 1px 0 $grey-4;
        }
    }

    // Remove any input styling and explicitly set all properties that might affect the
    // width of the input. This is important because this class is also used to style a
    // "sizer" element (in VariableWidthInput).
    &__input {
        padding: 0.15em 0.3em 0.15em 0.3em;
        background: none;
        font-size: 1em;
        font-family: inherit;
        color: inherit;
        border: 0;
        min-width: 1.5em;

        &:focus {
            background: white;
            outline: none;
        }
    }

    &__indicators {
        display: flex;
        align-items: stretch;
    }
    &__dropdown-indicator {
        color: $grey-6;
        display: flex;
        align-items: center;
        svg {
            flex: 0 0 auto;
            height: 1em;
            width: auto;
            margin: 0.1em 0.1em 0 0;
        }
    }
    &__control--menu-is-open &__dropdown-indicator,
    &__control:hover &__dropdown-indicator {
        color: $grey-8;
    }

    &__menu {
        position: absolute;
        top: calc(100% + 0.25em);
        z-index: 10;
        border-radius: 0.15em;
        overflow: hidden;
        box-shadow: 2px 2px 4px rgba($grey-9, 0.4);
        // width: 7em;
        min-width: 100%;
    }

    &__menu-list {
        min-width: 100%;
        width: max-content;
        overflow: auto;
        max-height: 22em;
        // scrollbar-width: thin;

        @media (max-height: 40em) {
            max-height: 14em;
        }
        @media (max-height: 25em) {
            max-height: 9.25em;
        }
    }

    &__option {
        flex: 0 0;
        padding: 0.25em 0.35em;
        user-select: none;
        min-height: calc(1em + (0.25em * 2));
        background-color: white;

        display: flex;
        align-items: center;
        > * {
            flex: 1;
        }

        svg {
            flex: 0 0 auto;
            height: 1em;
            width: auto;
            margin: 0 0.15em 0 0.75em;
        }

        &--is-disabled {
            color: $grey-5;
        }
        &--is-focused {
            background-color: $grey-4;
        }
        &--is-selected {
            background-color: $purple-3;
            color: $purple-9;
        }
        &--is-selected &-description {
            color: $purple-7;
        }

        // #{...} is Sass's interpolation syntax
        &--is-selected#{&}--is-focused {
            background-color: $purple-4;
        }
        &--is-selected#{&}--is-focused &-description {
            color: $purple-8;
        }

        &-description {
            font-size: 0.8em;
            color: $grey-7;
            margin: 0.15em 0 0 0;
            max-width: 22em;
        }
    }
}
